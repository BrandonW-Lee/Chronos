# Nginx is needed to route requests from the web user to the reverse proxy on the frontend for eventual proxying to
# the individual services in the microservices network.

# ---*** Chronos 3.0 Team ***--- #
# Publishing the host ports for the microservices wasn't necessary, as they don't need to be accessed from outside of the default bridge network. 
  # They just need to be reachable by requests routed from Nginx.
  # Hence host port values were deleted so that containers are reachable only by requests routed through Nginx's .
# docker-compose will create a default bridge network for all the containers, so no need for a 'networks' key.

version: '3'
services:
  frontend:
    # Use the Dockerfile in each microservice's dir to build the image.
    build: './frontend'

    container_name: "frontend-container"

    # ports:
    #   - "3000:3000"

    # volumes:
    #   - ./frontend:/usr/src/app/frontend

  books:
    build: './books'

    container_name: "books-container"
    
    # Only expose an internal port. Same for other microservices.
    ports:
      - "4545"
    
    depends_on:
      - frontend
  
  customers:
    build: './customers'

    container_name: "customers-container"

    ports:
      - "5555"

    depends_on:
      - frontend
  
  orders:
    build: './orders'

    container_name: "orders-container"

    ports:
      - "7777"

    depends_on:
      - frontend
  
  nginx:
    # Use latest version of the public nginx image.
    image: nginx:latest

    container_name: "production_nginx"

    ports:
      - "8080:8080"
    
    volumes:
      - ./frontend:/srv/www/static
      - ./default.conf:/etc/nginx/conf.d/default.conf

    depends_on:
      - frontend
      - books
      - customers
      - orders
  
  
  
  
  
